/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import type { GenericContractsDeclaration } from "$lib/utils/scaffold-eth/contract";
import addresses from "@scaffold-eth-alt/foundry/addresses.json";
import type { Address } from "viem";

let deployedContracts: GenericContractsDeclaration = {};

const runDeployedContracts = () => {
	for (let [chainId, contracts] of Object.entries(addresses)) {
		console.log(chainId, contracts);
    deployedContracts[Number(chainId)] = {};
		for (let [name, address] of Object.entries(contracts)) {
			console.log(name, address);
			if (name === "chainName") break;
			deployedContracts[Number(chainId)][name] = { address: address as Address, abi: [] };
		}
	}
	console.log("runDeployedContracts ~ deployedContracts:", deployedContracts);
};

export default deployedContracts;
export { runDeployedContracts };
